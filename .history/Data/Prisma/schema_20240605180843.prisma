// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js" // Specifies the Prisma Client as the generator
}

datasource db {
    provider = "postgresql" // Specifies PostgreSQL as the database provider
    url      = env("DATABASE_URL") // Reads the database URL from environment variables
}

model Utilizador {
    id_utilizador   Int      @id @default(autoincrement()) // Primary key, auto-incrementing
    nome           String // User's name
    email          String   @unique // User's email, must be unique
    contacto       String // User's contact information
    password       String // User's password
    isAdmin        Boolean  @default(false) // Whether the user is an admin, default is false
    Avaliar       Avaliar[] // One-to-many relation with Avaliar model
    A_seguir      A_seguir[] // One-to-many relation with A_seguir model
    Lista_seguidos Lista_seguidos[] // One-to-many relation with Lista_seguidos model
}

model Avaliar {
    id_avaliacao   Int      @id @default(autoincrement()) // Primary key, auto-incrementing
    id_utilizador  Int // Foreign key referencing Utilizador
    id_produto     Int // Foreign key referencing Produtos
    produto        String // Name of the product being reviewed
    texto_comentario String // Text of the review
    data_avaliacao DateTime // Date of the review
    Utilizador     Utilizador @relation(fields: [id_utilizador], references: [id_utilizador]) // Relation to Utilizador model
    Produtos       Produtos @relation(fields: [id_produto], references: [id_produto]) // Relation to Produtos model
}

model Produtos {
    id_produto    Int      @id @default(autoincrement()) // Primary key, auto-incrementing
    nome          String // Product name
    descricao     String // Product description
    preco        Float // Product price
    fabricante    String // Product manufacturer
    id_categoria  Int // Foreign key referencing Categorias
    Precos        Precos[] // One-to-many relation with Precos model
    A_seguir      A_seguir[] // One-to-many relation with A_seguir model
    Avaliar       Avaliar[] // One-to-many relation with Avaliar model
    Categorias    Categorias @relation(fields: [id_categoria], references: [id_categoria]) // Relation to Categorias model
}

model Precos {
    id_preco      Int      @id @default(autoincrement()) // Primary key, auto-incrementing
    id_produto    Int // Foreign key referencing Produtos
    data_preco    DateTime // Date of the price record
    Produtos     Produtos @relation(fields: [id_produto], references: [id_produto]) // Relation to Produtos model
}

model A_seguir {
    id_seguir      Int      @id @default(autoincrement()) // Primary key, auto-incrementing
    id_produto    Int // Foreign key referencing Produtos
    alerta_preco  Boolean // Price alert flag
    id_utilizador  Int // Foreign key referencing Utilizador
    id_lista       Int // Foreign key referencing Lista_seguidos
    Produtos     Produtos @relation(fields: [id_produto], references: [id_produto]) // Relation to Produtos model
    Utilizador    Utilizador @relation(fields: [id_utilizador], references: [id_utilizador]) // Relation to Utilizador model
    Lista_seguidos Lista_seguidos @relation(fields: [id_lista], references: [id_lista]) // Relation to Lista_seguidos model
}

model Lista_seguidos {
    id_lista       Int      @id @default(autoincrement()) // Primary key, auto-incrementing
    id_utilizador  Int // Foreign key referencing Utilizador
    A_seguir      A_seguir[] // One-to-many relation with A_seguir model
    Utilizador    Utilizador @relation(fields: [id_utilizador], references: [id_utilizador]) // Relation to Utilizador model
}

model Categorias {
    id_categoria   Int      @id @default(autoincrement()) // Primary key, auto-incrementing
    descricao           String // Category description
    Produtos       Produtos[] // One-to-many relation with Produtos model
}
